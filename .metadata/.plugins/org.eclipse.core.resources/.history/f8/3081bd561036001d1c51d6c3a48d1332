package com.educacionit.servlets;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.educacionit.entidades.Usuario;


@WebServlet(name="Login", urlPatterns= "/Login" )
public class Login extends HttpServlet {
	private static final long serialVersionUID = 1L;
    private static List<Usuario> usuarios;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Login() {
        super();
        // TODO Auto-generated constructor stub
    }

    
    
	@Override
	public void init() throws ServletException {
		// TODO Auto-generated method stub
		super.init();
		llenarUsuarios();
	}



	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String correo = request.getParameter("correo");
		String clave = request.getParameter("clave");
		//diferencias entre sesion y cookies   ACEPTA LAS COOKIES   
		
		Usuario usuario = buscar(correo, clave);
		
		if(usuario!=null) {
			request.setAttribute("mensaje", "Bienvenido" + usuario);
		}else {
			request.setAttribute("mensaje", "credenciales incorrectas");
		}
		
		
		
		
		
		RequestDispatcher rd = request.getRequestDispatcher("index.jsp");
        rd.forward(request, response);

		
	}

	private Usuario buscar(String correo, String clave) {
		for(Usuario usuario : usuarios) {
			if(usuario.getCorreo().equalsIgnoreCase(correo) && usuario.getClave().equals(clave)) {
				return usuario;
			}
		}
		return null;
	}
	
	private void llenarUsuarios() {
		//arraylist
		usuarios = new ArrayList<>();
		usuarios.add(new Usuario("user1@gmail.com", "user1.1234"));
		usuarios.add(new Usuario("user2@gmail.com", "user2.1234"));
		usuarios.add(new Usuario("user3@gmail.com", "user3.1234"));
		usuarios.add(new Usuario("user4@gmail.com", "user4.1234"));
		
	}
	
}
